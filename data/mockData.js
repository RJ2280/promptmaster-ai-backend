export const AI_MODELS = [
  { id: 'gemini', name: 'Google Gemini', logoUrl: '/logos/gemini.svg', description: 'Advanced multimodal models from Google, excelling in reasoning and creative generation.', documentationLink: 'https://ai.google.dev/docs', playgroundPath: '/playground?model=gemini', themeColor: '#8952FF', capabilities: { reasoning: 9, creativity: 9, speed: 10, conciseness: 7, coding: 9 } },
  { id: 'gpt', name: 'OpenAI GPT', logoUrl: '/logos/openai.svg', description: 'Powerful language models by OpenAI, known for GPT-4 capabilities.', documentationLink: 'https://platform.openai.com/docs', playgroundPath: '/playground?model=gpt', themeColor: '#10A37F', capabilities: { reasoning: 9, creativity: 10, speed: 7, conciseness: 6, coding: 10 } },
  { id: 'claude', name: 'Anthropic Claude', logoUrl: '/logos/claude.svg', description: 'AI models focused on helpfulness, harmlessness, and honesty, developed by Anthropic.', documentationLink: 'https://www.anthropic.com/claude', playgroundPath: '/playground?model=claude', themeColor: '#D97706', capabilities: { reasoning: 8, creativity: 8, speed: 8, conciseness: 10, coding: 7 } },
  { id: 'llama', name: 'Meta Llama', logoUrl: '/logos/meta.svg', description: 'Open-source large language models from Meta AI, designed for research and development.', documentationLink: 'https://ai.meta.com/llama/', playgroundPath: '/playground?model=llama', themeColor: '#0062E3', capabilities: { reasoning: 7, creativity: 7, speed: 9, conciseness: 8, coding: 8 } },
  { id: 'cohere', name: 'Cohere', logoUrl: '/logos/cohere.svg', description: 'Enterprise-focused AI platform offering models for text generation, classification, and embeddings.', documentationLink: 'https://docs.cohere.com/', playgroundPath: '/playground?model=cohere', themeColor: '#A259F7', capabilities: { reasoning: 8, creativity: 6, speed: 8, conciseness: 9, coding: 6 } },
];

export const LESSONS = [
  // ... (Full 53 lessons would be here, showing a representative sample)
  { id: 'lesson-1-effective-open-ended-prompts', title: 'Lesson 1: The Art of Clarity & Specificity', difficulty: 'Beginner', prerequisites: [], modelId: 'gemini', modelName: 'General Prompting', tags: ['Prompt Basics', 'Clarity', 'Specificity'], estimatedTime: '15 mins', description: 'Learn the most crucial skill in prompt engineering: how to write clear, specific instructions to get predictable and useful results from any AI model.' },
  { id: 'lesson-3-role-based-prompting', title: 'Lesson 3: The Power of Personas', difficulty: 'Beginner', prerequisites: ['lesson-1-effective-open-ended-prompts'], modelId: 'claude', modelName: 'Claude', tags: ['Persona', 'Role-playing'], estimatedTime: '20 mins', description: "Discover how assigning a role or persona to an AI (e.g., 'Act as a historian') dramatically improves the quality, tone, and relevance of its responses." },
  { id: 'lesson-7-few-shot-prompting', title: 'Lesson 7: Few-Shot Prompting by Example', difficulty: 'Intermediate', prerequisites: ['lesson-1-effective-open-ended-prompts'], modelId: 'gpt', modelName: 'GPT', tags: ['Few-Shot', 'Formatting', 'Adaptation'], estimatedTime: '25 mins', description: 'Teach an AI new formats, structures, or tasks by providing a few high-quality examples directly in your prompt. A powerful technique for complex outputs.' },
  { id: 'lesson-2-chain-of-thought', title: 'Lesson 2: Advanced Reasoning with Chain-of-Thought', difficulty: 'Intermediate', prerequisites: ['lesson-1-effective-open-ended-prompts', 'lesson-3-role-based-prompting'], modelId: 'gemini', modelName: 'Gemini', tags: ['Reasoning', 'CoT', 'Complex Tasks'], estimatedTime: '30 mins', description: 'Unlock an AI\'s reasoning abilities by instructing it to "think step-by-step." This lesson covers the fundamentals of CoT prompting for solving logic puzzles and multi-step problems.' },
  { id: 'lesson-8-structuring-output', title: 'Lesson 8: Forcing Structured Output (JSON/XML)', difficulty: 'Intermediate', prerequisites: ['lesson-7-few-shot-prompting'], modelId: 'gemini', modelName: 'Gemini', tags: ['Data Formatting', 'JSON', 'Application Integration'], estimatedTime: '30 mins', description: 'Learn techniques to compel an AI to return data in a specific, structured format like JSON or XML, essential for building robust AI-powered applications.' },
  { id: 'lesson-5-multimodal-vision', title: 'Lesson 5: Multimodal Prompting (Text + Image)', difficulty: 'Advanced', prerequisites: ['lesson-2-chain-of-thought'], modelId: 'gemini', modelName: 'Gemini', tags: ['Multimodal', 'Vision'], estimatedTime: '35 mins', description: 'Explore the exciting world of multimodal AI. Learn how to combine text instructions with visual context for richer, more nuanced interactions using Gemini\'s vision capabilities.' },
  { id: 'lesson-15-prompt-chaining', title: 'Lesson 15: Prompt Chaining for Complex Workflows', difficulty: 'Advanced', prerequisites: ['lesson-8-structuring-output'], modelId: 'gemini', modelName: 'Gemini', tags: ['Workflows', 'Automation', 'Chaining'], estimatedTime: '40 mins', description: 'Break down large, complex tasks into a series of smaller, interconnected prompts. Learn how to chain prompts together, using the output of one as the input for the next.' },
  { id: 'lesson-22-rag-basics', title: 'Lesson 22: Retrieval-Augmented Generation (RAG) Explained', difficulty: 'Advanced', prerequisites: ['lesson-15-prompt-chaining'], modelId: 'cohere', modelName: 'Cohere', tags: ['RAG', 'Grounding', 'Factual Accuracy'], estimatedTime: '45 mins', description: 'Understand the core concepts of RAG, a technique that grounds AI responses in a specific set of external documents, dramatically improving factual accuracy and reducing hallucinations.' },
  { id: 'lesson-31-function-calling', title: 'Lesson 31: Gemini Function Calling', difficulty: 'Advanced', prerequisites: ['lesson-8-structuring-output'], modelId: 'gemini', modelName: 'Gemini', tags: ['Function Calling', 'Tools', 'API Integration'], estimatedTime: '50 mins', description: 'Enable your AI to interact with external tools and APIs. Learn how to define functions, let the model choose when to call them, and integrate the results back into the conversation.' },
  { id: 'lesson-45-image-generation-prompts', title: 'Lesson 45: Mastering Prompts for Image Generation', difficulty: 'Intermediate', prerequisites: ['lesson-1-effective-open-ended-prompts'], modelId: 'gemini', modelName: 'Imagen', tags: ['Image Generation', 'Art', 'Style'], estimatedTime: '35 mins', description: 'Learn the specific vocabulary and structures for crafting effective image generation prompts. Cover concepts like style modifiers, camera angles, lighting, and composition.' },
  { id: 'lesson-53-veo-video-generation', title: 'Lesson 53: Veo Crash Course - From Prompt to Video', difficulty: 'Advanced', prerequisites: ['lesson-45-image-generation-prompts', 'lesson-5-multimodal-vision'], modelId: 'gemini', modelName: 'Veo', tags: ['Video Generation', 'Cinematic Prompts'], estimatedTime: '60 mins', description: 'A comprehensive guide to Google\'s Veo model, covering cinematic vocabulary, shot types, and prompt structuring for generating high-quality video clips.' },
  // ... more lessons would fill this out to 53.
];

export const TUTORIALS = [
  { id: 'tutorial-cot-1', title: 'Interactive Tutorial: Mastering Chain-of-Thought Reasoning', modelIds: ['gemini', 'gpt'], scenario: 'You need an AI to solve a multi-step logic puzzle that requires careful reasoning. A simple prompt might fail, but by guiding the AI to "think step-by-step," you can dramatically improve its accuracy.', goalDescription: 'Your goal is to use Chain-of-Thought (CoT) prompting to solve a word problem correctly.', steps: [ { type: 'info', description: 'Welcome! Chain-of-Thought (CoT) prompting doesn\'t just ask for an answer; it asks the AI to explain its reasoning process *before* giving the final answer. This mimics how humans think and reduces errors.' }, { type: 'info', description: 'To trigger CoT, simply add a phrase like "Let\'s think step by step" to the end of your prompt.' }, { type: 'interactive_prompt', description: 'Now it\'s your turn! Use the CoT technique to write a prompt for the following problem. Remember to include the magic phrase!', example: 'Problem: "There are 15 trees in a park. A team plants 3 more rows of trees, with 5 trees in each row. Then, a storm knocks down 2 trees. How many trees are left in the park?"', interactive: { placeholder: 'Write your Chain-of-Thought prompt here...' } }, { type: 'info', description: 'Congratulations! You\'ve completed the Chain-of-Thought tutorial. You now have a powerful technique to improve AI accuracy on complex tasks.' } ] },
  { id: 'tutorial-persona-2', title: 'The Persona Architect: Crafting Expert AI Personalities', modelIds: ['claude', 'gpt'], scenario: "You need an AI to review a historical document not as a generic text processor, but with the specific viewpoint of a skeptical, world-weary historian.", goalDescription: "Your goal is to build a detailed, multi-layered AI persona that will analyze information from a specific, consistent perspective.", steps: [ { type: 'info', description: "Welcome to The Persona Architect! Standard 'Act as a...' prompts are good, but creating a deep persona gives you far more control. We'll use a three-layer model: Role, Tone, and Knowledge." }, { type: 'interactive_prompt', description: "Let's build one. Your task: Write a persona prompt for a cynical film critic who hates clich√©s. The AI will be used to review a generic movie plot.", example: "Movie Plot to Review: A small-town hero discovers a hidden talent and, against all odds, wins a national competition, finding love along the way.", interactive: { placeholder: "You are a... Your tone is... You are an expert in..." } }, { type: 'info', description: "Congratulations! You've learned how to architect detailed personas. This technique is invaluable for generating high-quality, specialized content." } ] },
  // ... more tutorials would fill this out to 10.
];
